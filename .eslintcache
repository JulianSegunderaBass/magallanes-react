[{"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\index.js":"1","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\reportWebVitals.js":"2","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\config\\FirebaseConfig.js":"3","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\App.js":"4","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\reducers\\RootReducer.js":"5","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\Landing.js":"6","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\AnnouncementDetails.js":"7","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\reducers\\NewsReducer.js":"8","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\reducers\\AuthReducer.js":"9","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\ProfilePage.js":"10","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\auth\\SignUp.js":"11","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\NewsForm.js":"12","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\auth\\SignIn.js":"13","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\NewsPage.js":"14","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\FAQ.js":"15","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\BrgyForms.js":"16","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\assets\\GlobalStyle.js":"17","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\SideNav.js":"18","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\Footer.js":"19","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\assets\\AutoScroll.js":"20","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\Statements.js":"21","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\AboutUs.js":"22","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\assets\\Animations.js":"23","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\actions\\AuthActions.js":"24","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\Council.js":"25","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-news\\NewsList.js":"26","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\actions\\NewsActions.js":"27","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-faq\\FaqSection.js":"28","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\SignedOutLinks.js":"29","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\SignedInLinks.js":"30","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\DropToggle.js":"31","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\CouncilData.js":"32","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-news\\Pagination.js":"33","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-news\\NewsSummary.js":"34","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-faq\\FaqData.js":"35","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\FeaturesIntro.js":"36","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\AdminLinks.js":"37"},{"size":2050,"mtime":1614611708291,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":973,"mtime":1615725156588,"results":"41","hashOfConfig":"39"},{"size":2129,"mtime":1614613391436,"results":"42","hashOfConfig":"39"},{"size":681,"mtime":1611997054815,"results":"43","hashOfConfig":"39"},{"size":1043,"mtime":1615781233470,"results":"44","hashOfConfig":"39"},{"size":7986,"mtime":1617861520475,"results":"45","hashOfConfig":"39"},{"size":5052,"mtime":1614350316261,"results":"46","hashOfConfig":"39"},{"size":11031,"mtime":1617866778469,"results":"47","hashOfConfig":"39"},{"size":8103,"mtime":1617866814236,"results":"48","hashOfConfig":"39"},{"size":4619,"mtime":1617864979824,"results":"49","hashOfConfig":"39"},{"size":6760,"mtime":1614609156657,"results":"50","hashOfConfig":"39"},{"size":4953,"mtime":1617861940014,"results":"51","hashOfConfig":"39"},{"size":1082,"mtime":1614609252926,"results":"52","hashOfConfig":"39"},{"size":660,"mtime":1614608844802,"results":"53","hashOfConfig":"39"},{"size":832,"mtime":1614608776734,"results":"54","hashOfConfig":"39"},{"size":2351,"mtime":1617865135402,"results":"55","hashOfConfig":"39"},{"size":3490,"mtime":1617857192922,"results":"56","hashOfConfig":"39"},{"size":4797,"mtime":1617862635757,"results":"57","hashOfConfig":"39"},{"size":644,"mtime":1607859371797,"results":"58","hashOfConfig":"39"},{"size":2802,"mtime":1614605156109,"results":"59","hashOfConfig":"39"},{"size":2517,"mtime":1617860137989,"results":"60","hashOfConfig":"39"},{"size":2101,"mtime":1614604903563,"results":"61","hashOfConfig":"39"},{"size":5707,"mtime":1617868214102,"results":"62","hashOfConfig":"39"},{"size":3539,"mtime":1615781801556,"results":"63","hashOfConfig":"39"},{"size":17363,"mtime":1617869604699,"results":"64","hashOfConfig":"39"},{"size":9729,"mtime":1616909438609,"results":"65","hashOfConfig":"39"},{"size":3089,"mtime":1614568496313,"results":"66","hashOfConfig":"39"},{"size":2590,"mtime":1617856780566,"results":"67","hashOfConfig":"39"},{"size":3708,"mtime":1617856794927,"results":"68","hashOfConfig":"39"},{"size":1509,"mtime":1614607915007,"results":"69","hashOfConfig":"39"},{"size":2863,"mtime":1611473212779,"results":"70","hashOfConfig":"39"},{"size":1320,"mtime":1614606861334,"results":"71","hashOfConfig":"39"},{"size":18580,"mtime":1617871264333,"results":"72","hashOfConfig":"39"},{"size":887,"mtime":1609656288817,"results":"73","hashOfConfig":"39"},{"size":2176,"mtime":1617862521441,"results":"74","hashOfConfig":"39"},{"size":3885,"mtime":1617856817208,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"120cpkz",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"78"},"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\index.js",[],["157","158"],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\reportWebVitals.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\config\\FirebaseConfig.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\App.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\reducers\\RootReducer.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\Landing.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\AnnouncementDetails.js",["159","160"],"// Details page for an announcement\r\n\r\n// Functional Imports\r\nimport React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { useSelector } from 'react-redux';\r\n// Component Imports\r\nimport Modal from 'react-modal';\r\nimport { Link } from 'react-router-dom';\r\nimport AutoScroll from '../assets/AutoScroll';\r\n// Data + Image Imports\r\n// Styling + Animation Imports\r\nimport styled from 'styled-components'\r\nimport { motion } from 'framer-motion';\r\nimport { pageLoad, fade, imageAnim } from '../assets/Animations';\r\nimport '../assets/ModalStyle.css';\r\n\r\nconst AnnouncementDetails = (props) => {\r\n\r\n    // Selecting Redux State\r\n    const NewsAnnouncements = useSelector((state) => state.firestore.data.NewsAnnouncements);\r\n\r\n    // Local State\r\n    const [imageModalState, setImageModalState] = useState(false);\r\n    const id = props.match.params.id;\r\n    const NewsItem = NewsAnnouncements ? NewsAnnouncements[id] : null; // Matching route ID with data from state\r\n\r\n    // Conditions\r\n    if (\r\n        NewsItem\r\n        && localStorage.getItem(\"id\") !== id\r\n    ) {\r\n        localStorage.setItem(\"new_items_id\", id);\r\n        localStorage.setItem(\"new_items_heading\", NewsItem.heading);\r\n        localStorage.setItem(\"new_items_createdAt\", moment(NewsItem.createdAt.toDate()).calendar());\r\n        localStorage.setItem(\"new_items_authorFirstName\", NewsItem.authorFirstName);\r\n        localStorage.setItem(\"new_items_authorLastName\", NewsItem.authorLastName);\r\n        localStorage.setItem(\"new_items_authorEmail\", NewsItem.authorEmail);\r\n        localStorage.setItem(\"new_items_body\", NewsItem.body);\r\n        localStorage.setItem(\"new_items_attachmentURL\", NewsItem.attachmentURL);\r\n        localStorage.setItem(\"new_items_attachmentType\", NewsItem.attachmentType);\r\n        localStorage.setItem(\"new_items_attachmentName\", NewsItem.attachmentName);\r\n    }\r\n    \r\n    return (\r\n        <MainContainer variants={pageLoad} initial=\"hidden\" animate=\"show\" exit=\"exit\">\r\n            <AutoScroll />\r\n            <Card>\r\n                <motion.div variants={fade}>\r\n                    <h4>{localStorage.getItem(\"new_items_heading\")}</h4>\r\n                    {/* Using Moment.js to parse createdAt property to readable date */}\r\n                    <h5>{localStorage.getItem(\"new_items_createdAt\")}</h5>\r\n                    <div className=\"sender-info\">\r\n                        <h5>Posted By:</h5>\r\n                        <h5>{localStorage.getItem(\"new_items_authorFirstName\")} {localStorage.getItem(\"new_items_authorLastName\")}</h5>\r\n                        <h5 id=\"sender-email\">{localStorage.getItem(\"new_items_authorEmail\")}</h5>\r\n                </div>\r\n                </motion.div>\r\n                <div className=\"divider\"></div>\r\n                {/* Section for rich text content */}\r\n                <RichContent>\r\n                    {ReactHtmlParser(localStorage.getItem(\"new_items_body\"))}\r\n                </RichContent>\r\n                {/* If attachment is detected, rendered here */}\r\n                {localStorage.getItem(\"new_items_attachmentURL\") &&\r\n                    localStorage.getItem(\"new_items_attachmentType\") === 'image/jpeg' || localStorage.getItem(\"new_items_attachmentType\") === 'image/png' ?\r\n                        <Image>\r\n                            <motion.img variants={imageAnim} src={localStorage.getItem(\"new_items_attachmentURL\")} alt={localStorage.getItem(\"new_items_attachmentName\")} onClick={() => setImageModalState(true)}/>\r\n                        </Image>\r\n                    :\r\n                        localStorage.getItem(\"new_items_attachmentType\") === 'application/pdf' || localStorage.getItem(\"new_items_attachmentType\") === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ?\r\n                                <a id=\"media-link\" href={localStorage.getItem(\"new_items_attachmentURL\")} download>{localStorage.getItem(\"new_items_attachmentName\")}</a>\r\n                            :\r\n                                ''\r\n                }\r\n                <Link to=\"/news\" id=\"return-link\">View other announcements</Link>\r\n                {/* Image Modal */}\r\n                <Modal\r\n                    isOpen={imageModalState}\r\n                    onRequestClose={() => setImageModalState(false)}\r\n                    className=\"attachment-modal\"\r\n                    overlayClassName=\"attachment-modal-overlay\"\r\n                >\r\n                    <div className=\"attachment-container\">\r\n                        <img variants={imageAnim} src={localStorage.getItem(\"new_items_attachmentURL\")} alt={localStorage.getItem(\"new_items_attachmentName\")}/>\r\n                    </div>\r\n                </Modal>\r\n            </Card>\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\n// Styled Components + Color Variables\r\nconst cardBackground = \"#C7D1C4\";\r\nconst dividerColor = \"#E63946\"\r\nconst mainBackground = \"#F1FAEE\";\r\nconst mainFontColor = \"#1D3557\";\r\nconst accentColor = \"#E63946\";\r\n\r\nconst MainContainer = styled(motion.div)`\r\n    padding: 5rem 7rem;\r\n    min-height: 90vh;\r\n    @media (max-width: 1090px) {\r\n        padding: 2rem 2rem;\r\n    }\r\n`\r\nconst Card = styled.div`\r\n    padding: 2.5rem 5rem;\r\n    background: ${cardBackground};\r\n    border-radius: 2rem;\r\n    h4, h5 {\r\n        font-weight: bold;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    h5 {\r\n        font-size: 1.2rem;\r\n    }\r\n    p {\r\n        font-weight: lighter;\r\n    }\r\n    .divider {\r\n        width: 100%;\r\n        height: 0.2rem;\r\n        background: ${dividerColor};\r\n    }\r\n    a#return-link {\r\n        display: block;\r\n        width: 30%;\r\n        text-decoration: none;\r\n        text-align: center;\r\n        margin: 1rem auto;\r\n        font-weight: bold;\r\n        font-size: 1rem;\r\n        cursor: pointer;\r\n        padding: 0.5rem 0.7rem;\r\n        border: 3px solid ${accentColor};\r\n        border-radius: 0.8rem;\r\n        background: transparent;\r\n        color: ${mainFontColor};\r\n        /* Adding a transition for hover */\r\n        transition: all 0.5s ease;\r\n        font-family: 'Inter', sans-serif;\r\n        &:hover {\r\n            background-color: ${accentColor};\r\n            color: ${mainBackground};\r\n        }\r\n    }\r\n    a#media-link {\r\n        text-decoration: none;\r\n        text-align: center;\r\n        font-weight: bold;\r\n        font-size: 0.7rem;\r\n        cursor: pointer;\r\n        padding: 0.5rem 1rem;\r\n        border: 1.5px solid ${accentColor};\r\n        border-radius: 0.5rem;\r\n        background: transparent;\r\n        color: ${mainFontColor};\r\n        transition: all 0.5s ease;\r\n        font-family: 'Inter', sans-serif;\r\n        &:hover {\r\n            background-color: ${accentColor};\r\n            color: ${mainBackground};\r\n        }\r\n    }\r\n    .sender-info {\r\n        margin: 1rem 0;\r\n        h5 {\r\n            font-weight: lighter;\r\n        }\r\n        #sender-email {\r\n            font-style: italic;\r\n            word-break: break-all;\r\n        }\r\n    }\r\n    @media (max-width: 870px) {\r\n        padding: 2rem 1.2rem;\r\n        h4 {\r\n            font-size: 1.5rem;\r\n        }\r\n        a#return-link, a#media-link {\r\n            display: block;\r\n            width: 100%;\r\n        }\r\n        a#return-link {\r\n            font-size: 0.8rem;\r\n        }\r\n    }\r\n`\r\nconst RichContent = styled.div`\r\n    margin: 2rem 0;\r\n    h1, h2, h3, h4, h5, p {\r\n        color: ${mainFontColor};\r\n        padding: 0;\r\n        margin: 0;\r\n        font-weight: light;\r\n    }\r\n    ol, ul {\r\n        color: ${mainFontColor};\r\n        margin-left: 2rem;\r\n        li {\r\n            font-size: 1.2rem;\r\n        }\r\n    }\r\n`\r\nconst Image = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    img {\r\n        width: 50%;\r\n        object-fit: contain;\r\n        @media (max-width: 870px) {\r\n            width: 100%;\r\n        }\r\n    }\r\n`\r\n\r\nexport default AnnouncementDetails;","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\reducers\\NewsReducer.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\reducers\\AuthReducer.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\ProfilePage.js",["161"],"// Page for displaying profile information + benefits\r\n\r\n// Functional Imports\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetPass, verifyEmail, deleteAccount } from '../redux-store/actions/AuthActions';\r\nimport { setProfileImage } from '../redux-store/actions/AuthActions';\r\nimport { store } from 'react-notifications-component';\r\n// Component Imports\r\nimport AutoScroll from '../assets/AutoScroll';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\n// Icon Imports\r\nimport * as AiIcons from \"react-icons/ai\";\r\n// Styling + Animation Imports\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\nimport { imageAnim, pageLoad } from '../assets/Animations';\r\nimport '../assets/ModalStyle.css';\r\n\r\nconst ProfilePage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Selecting Redux State\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n    const profileData = useSelector((state) => state.firebase.profile);\r\n\r\n    // Local State\r\n    const [profilePhoto, setProfilePhoto] = useState(null);\r\n    const [modalState, setModalState] = useState(false);\r\n\r\n    // Functions\r\n    const handleAttachment = (e) => {\r\n        if (e.target.files[0]) {\r\n            setProfilePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (profilePhoto) {\r\n            dispatch(setProfileImage(profilePhoto, auth.uid, profileData.profileImageURL));\r\n        } else {\r\n            store.addNotification({\r\n                title: \"No Photo Detected\",\r\n                message: \"Please choose a new image before submitting.\",\r\n                type: \"warning\",\r\n                insert: \"top\",\r\n                container: \"top-right\",\r\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                dismiss: {\r\n                    duration: 3000,\r\n                    onScreen: true\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const handlePassReset = () => {\r\n        dispatch(resetPass(auth.email));\r\n    }\r\n    const handleDelete = () => {\r\n        setModalState(false);\r\n        if (profileData.profileImageURL) {\r\n            dispatch(deleteAccount(auth.uid, profileData.profileImageURL));\r\n        } else {\r\n            dispatch(deleteAccount(auth.uid, ''));\r\n        }    \r\n    }\r\n\r\n    // Conditions\r\n    if (!auth.uid) { // If an authentication UID is NOT present (user is not signed in), redirect to home\r\n        return <Redirect to='/' />;\r\n    }\r\n    \r\n    return (\r\n        <ProfileContainer\r\n            variants={pageLoad} \r\n            initial=\"hidden\" \r\n            animate=\"show\" \r\n            exit=\"exit\"\r\n        >\r\n            {/* For Auto Scrolling to top */}\r\n            <AutoScroll />\r\n            <ProfileDisplay>\r\n                <Image>\r\n                    {/* Conditionally rendering profile image */}\r\n                    <motion.img variants={imageAnim} src={profileData.profileImageURL ? profileData.profileImageURL : 'https://firebasestorage.googleapis.com/v0/b/magallanes-react.appspot.com/o/profile-images%2FprofilePlaceholder.png?alt=media&token=1bef4059-7389-4228-85ac-1991a24f3a67'} alt=\"profile-image\" />\r\n                </Image>\r\n                <p>Change your Picture</p>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input \r\n                        type=\"file\" \r\n                        accept=\"image/png, image/jpeg\"\r\n                        onChange={handleAttachment}\r\n                    />\r\n                    <button id=\"photo-submit\">Submit</button>\r\n                </form>\r\n            </ProfileDisplay>\r\n            <div>\r\n                <div className=\"divider\"></div>\r\n                <h2><span>Name:</span> {profileData.firstName} {profileData.lastName}</h2>\r\n                <h4><span>Email:</span> <span id=\"email\">{auth.email}</span></h4>\r\n                <h4><span>Status:</span> {auth.emailVerified ? 'Verified' : 'Not Verified'}</h4>\r\n                <div className=\"divider\"></div>\r\n                <h5>You may reset your password here. A message will be sent to your inbox with further instructions.</h5>\r\n                <button onClick={handlePassReset}>Change Password</button>\r\n                <div className=\"divider\"></div>\r\n                <h5 id=\"warning\"><AiIcons.AiOutlineWarning id=\"warning-logo\" /><span><b>Warning:</b> This action is irreversible.</span></h5>\r\n                <button onClick={() => setModalState(true)}>Delete Your Account</button>\r\n                {/* Delete Modal */}\r\n                <Modal\r\n                    isOpen={modalState}\r\n                    onRequestClose={() => setModalState(false)}\r\n                    className=\"delete-modal\"\r\n                    overlayClassName=\"delete-modal-overlay\"\r\n                >\r\n                    <ModalContent>\r\n                        <h4 className=\"modal-text\">Are you sure you wish to delete your account?</h4>\r\n                        <button onClick={handleDelete}>Delete Account</button>\r\n                        <button onClick={() => setModalState(false)}>Cancel</button>\r\n                    </ModalContent>\r\n                </Modal>\r\n            </div>\r\n        </ProfileContainer>\r\n    )\r\n}\r\n\r\n// Styled Components + Color Variables\r\nconst mainFontColor = \"#1D3557\";\r\nconst dividerColor = \"#1D3557\";\r\n\r\nconst ProfileContainer = styled(motion.div)`\r\n    min-height: 90vh;\r\n    padding: 5rem 10rem;\r\n    display: flex;\r\n    h2, h4, h5 {\r\n        margin-bottom: 1rem;\r\n    }\r\n    ul {\r\n        margin-top: 2rem;\r\n        margin-bottom: 1rem;\r\n        padding: 0 3rem;\r\n        li {\r\n            font-size: 1.8rem;\r\n            color: ${mainFontColor};\r\n        }\r\n    }\r\n    #email {\r\n        color: ${mainFontColor};\r\n    }\r\n    #warning {\r\n        display: flex;\r\n        align-items: center;\r\n        #warning-logo {\r\n            color: #E63946;\r\n            font-size: 1.8rem;\r\n        }\r\n    }\r\n    .divider {\r\n        width: 100%;\r\n        height: 0.3rem;\r\n        background: ${dividerColor};\r\n        margin-bottom: 3rem;\r\n    }\r\n    .divider:last-of-type {\r\n        margin-top: 1.5rem;\r\n    }\r\n    #verification-divider {\r\n        margin-top: 1rem;\r\n    }\r\n    @media (max-width: 1090px) {\r\n        padding: 2rem 2rem;\r\n    }\r\n    @media (max-width: 870px) {\r\n        flex-direction: column;\r\n        h2 {\r\n            font-size: 2rem;\r\n        }\r\n        li {\r\n            font-size: 1.5rem\r\n        }\r\n        #email {\r\n            color: ${mainFontColor};\r\n            font-size: 1.2rem;\r\n        }\r\n        #warning {\r\n            flex-direction: column;\r\n            text-align: center;\r\n            margin-bottom: 1.5rem;\r\n            #warning-logo {\r\n                color: #E63946;\r\n                font-size: 3.5rem;\r\n            }\r\n        }\r\n        button {\r\n            display: block;\r\n            margin: 0 auto;\r\n        }\r\n    }\r\n`\r\nconst ProfileDisplay = styled.div`\r\n    margin-right: 2rem;\r\n    width: 30%;\r\n    height: 100%;\r\n    form {\r\n        #photo-submit {\r\n            margin: 1.5rem 0;\r\n            @media (max-width: 870px) {\r\n                margin: 1rem auto 0 auto;\r\n                padding: 0.5rem 0.7rem;\r\n                border-radius: 0.8rem;\r\n            }\r\n        }\r\n    }\r\n    @media (max-width: 870px) {\r\n        width: 100%;\r\n        margin-bottom: 2rem;\r\n    }\r\n`\r\nconst Image = styled.div`\r\n    margin: 0 auto;\r\n    border-radius: 2rem;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 50%;\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    button {\r\n        width: 50%;\r\n        margin: 0.5rem 0;\r\n        @media (max-width: 870px) {\r\n            width: 100%;\r\n        }\r\n    }\r\n    .modal-text {\r\n        margin-bottom: 1rem;\r\n    }\r\n`\r\n\r\nexport default ProfilePage;","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\auth\\SignUp.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\NewsForm.js",[],["162","163"],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\auth\\SignIn.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\NewsPage.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\FAQ.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\BrgyForms.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\assets\\GlobalStyle.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\SideNav.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\Footer.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\assets\\AutoScroll.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\Statements.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\AboutUs.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\assets\\Animations.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\actions\\AuthActions.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\Council.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-news\\NewsList.js",["164","165","166","167","168","169","170"],"// Component holding list of news announcements\r\n\r\n// Functional Imports\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { createAnnouncement } from '../../redux-store/actions/NewsActions';\r\nimport { store } from 'react-notifications-component';\r\n// Component Imports\r\nimport NewsSummary from './NewsSummary';\r\nimport Pagination from './Pagination';\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from 'react-modal';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n// Data + Image Imports\r\nimport ReactSpinner from '../../assets/images/ReactSpinner.gif';\r\n// Styling + Animation Imports\r\nimport styled from 'styled-components';\r\nimport '../../assets/ModalStyle.css';\r\nimport { motion } from 'framer-motion';\r\nimport { strongRevealUp, fade } from '../../assets/Animations';\r\n\r\n// News Items is an array of objects\r\nconst NewsList = ({newsItems}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Selecting Redux State\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n    const publishingState = useSelector((state) => state.NewsAnnouncements.publishingAnnouncement);\r\n\r\n    // Local State\r\n    const [currentPage, setCurrentPage] = useState(1); // For Pagination: Pagination Variables\r\n    const [postsPerPage] = useState(2);\r\n    const [searchAnnouncement, setSearchAnnouncement] = useState(\"\");\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    let initialCurrentAnnouncements = newsItems && newsItems.slice(indexOfFirstPost, indexOfLastPost); // Slicing initial state of News Items\r\n    let currentAnnouncements = initialCurrentAnnouncements;\r\n    const [createModalState, setCreateModalState] = useState(false);\r\n    const [selectedCategory, setSelectedCategory] = useState('All');\r\n    const [newsAnnouncement, setNewsAnnouncement] = useState({ // For creating a News Announcement\r\n        heading: '',\r\n        body: '',\r\n        attachment: null,\r\n        category1Selected: false,\r\n        category2Selected: false,\r\n        category3Selected: false,\r\n        category4Selected: false\r\n    });\r\n\r\n    // Functions\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            newsAnnouncement.category1Selected === false && \r\n            newsAnnouncement.category2Selected === false && \r\n            newsAnnouncement.category3Selected === false && \r\n            newsAnnouncement.category4Selected === false\r\n            ) {\r\n                store.addNotification({\r\n                    title: \"Please provide a post category\",\r\n                    message: \"No categories selected\",\r\n                    type: \"warning\",\r\n                    insert: \"top\",\r\n                    container: \"top-right\",\r\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                    dismiss: {\r\n                        duration: 6000,\r\n                        onScreen: true\r\n                    }\r\n                });\r\n        } else {\r\n            dispatch(createAnnouncement(newsAnnouncement));\r\n            setCreateModalState(false);\r\n            setNewsAnnouncement({\r\n                ...newsAnnouncement,\r\n                category1Selected: false,\r\n                category2Selected: false,\r\n                category3Selected: false,\r\n                category4Selected: false\r\n            });\r\n        }\r\n    }\r\n    const handleAttachment = (e) => {\r\n        if (e.target.files[0]) {\r\n            setNewsAnnouncement({\r\n                ...newsAnnouncement, \r\n                attachment: e.target.files[0]})\r\n        }\r\n    }\r\n    const richEditorChange = (e, editor) => {\r\n        const richContent = editor.getData();\r\n        setNewsAnnouncement({...newsAnnouncement, body: richContent});\r\n    }\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber); // Function to change page number on click\r\n\r\n    // Conditions\r\n    if (searchAnnouncement) {\r\n        let filteredNewsItems = newsItems.filter(item => {\r\n            return (item.heading.toLowerCase()).includes(searchAnnouncement.toLowerCase()) || (item.body.toLowerCase()).includes(searchAnnouncement.toLowerCase());\r\n        });\r\n        currentAnnouncements = filteredNewsItems;\r\n    } else {\r\n        currentAnnouncements = initialCurrentAnnouncements;\r\n    }\r\n\r\n    if (selectedCategory === 'Category 1') {\r\n        let categoryItems = newsItems.filter(item => {\r\n            return item.category1 == true;\r\n        });\r\n        var categoryLength = categoryItems.length;\r\n        currentAnnouncements = categoryItems.slice(indexOfFirstPost, indexOfLastPost);\r\n    } \r\n    if (selectedCategory === 'Category 2') {\r\n        let categoryItems = newsItems.filter(item => {\r\n            return item.category2 == true;\r\n        });\r\n        var categoryLength = categoryItems.length;\r\n        currentAnnouncements = categoryItems.slice(indexOfFirstPost, indexOfLastPost);\r\n    } \r\n    if (selectedCategory === 'Category 3') {\r\n        let categoryItems = newsItems.filter(item => {\r\n            return item.category3 == true;\r\n        });\r\n        var categoryLength = categoryItems.length;\r\n        currentAnnouncements = categoryItems.slice(indexOfFirstPost, indexOfLastPost);\r\n    } \r\n    if (selectedCategory === 'Category 4') {\r\n        let categoryItems = newsItems.filter(item => {\r\n            return item.category4 == true;\r\n        });\r\n        var categoryLength = categoryItems.length;\r\n        currentAnnouncements = categoryItems.slice(indexOfFirstPost, indexOfLastPost);\r\n    }\r\n\r\n    if (!currentAnnouncements) { // Render out loading spinner gif\r\n        return (\r\n            <LoadingContainer>\r\n                <img src={ReactSpinner} alt=\"Loading Spinner\" />\r\n                <h4>Loading Announcements</h4>\r\n            </LoadingContainer>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Hide>\r\n                <HeaderSection variants={strongRevealUp}>\r\n                    <h2>Browse the latest updates from Barangay and The Community</h2>\r\n                    <p>\r\n                        Note: Only <span><b>verified</b></span> accounts can post. \r\n                        You may view your <Link to=\"/my-profile\" id=\"profile-link\">Profile Page</Link> here.\r\n                    </p>\r\n                    <div className=\"divider\"></div>\r\n                </HeaderSection>\r\n            </Hide>\r\n            <SearchSection>\r\n                {/* Only render out create announcement function if authentication ID is detected */}\r\n                {/* publishingState determines what button to render */}\r\n                {auth.uid && auth.emailVerified === true ?\r\n                        publishingState === false ? \r\n                        <button onClick={() => setCreateModalState(true)}>Create an Announcement</button> \r\n                        : \r\n                        <div id=\"loading-button\">\r\n                            <button id=\"posting-announcement\" disabled>Posting...</button>\r\n                            <img src={ReactSpinner} alt=\"Loading Spinner\" />\r\n                        </div>\r\n                    :\r\n                        ''\r\n                }\r\n                <input type=\"text\" placeholder=\"Search an Announcement\" onChange={e => setSearchAnnouncement(e.target.value)} />\r\n                <select onChange={(e) => setSelectedCategory(e.target.value)}>\r\n                    <option value=\"All\">All Posts</option>\r\n                    <option value=\"Category 1\">Category 1</option>\r\n                    <option value=\"Category 2\">Category 2</option>\r\n                    <option value=\"Category 3\">Category 3</option>\r\n                    <option value=\"Category 4\">Category 4</option>\r\n                </select>\r\n                {/* Create Post Modal */}\r\n                <Modal\r\n                    isOpen={createModalState}\r\n                    onRequestClose={() => setCreateModalState(false)}\r\n                    className=\"form-modal\"\r\n                    overlayClassName=\"form-modal-overlay\"\r\n                >\r\n                    <ModalContent>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <h4 className=\"modal-text\">Create an Announcement</h4>\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Enter your news headline here\" \r\n                                onChange={(e) => setNewsAnnouncement({...newsAnnouncement, heading: e.target.value})}\r\n                            />\r\n                            <RichContent>\r\n                                <CKEditor \r\n                                    id=\"rich-text-editor\" \r\n                                    editor={ClassicEditor} \r\n                                    onChange={richEditorChange} \r\n                                    config={{\r\n                                        toolbar: [ 'Heading', 'Bold', 'Italic', '|', 'bulletedList', 'numberedList', 'Link', '|', 'undo', 'redo' ]\r\n                                    }}\r\n                                />\r\n                            </RichContent>\r\n                            <input \r\n                                type=\"file\" \r\n                                accept=\"image/png, image/jpeg, .pdf, .doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n                                onChange={handleAttachment}\r\n                            />\r\n                            {/* Toggling post categories */}\r\n                            <div className=\"post-categories\">\r\n                                <div className=\"category\">\r\n                                    <input type=\"checkbox\" id=\"category-1\"\r\n                                        onChange={() => setNewsAnnouncement(prevState => ({...newsAnnouncement, category1Selected: !prevState.category1Selected}))}\r\n                                    />\r\n                                    <label htmlFor=\"category-1\">Category 1</label>\r\n                                </div>\r\n                                <div className=\"category\">\r\n                                    <input type=\"checkbox\" id=\"category-2\" \r\n                                        onChange={() => setNewsAnnouncement(prevState => ({...newsAnnouncement, category2Selected: !prevState.category2Selected}))}\r\n                                    />\r\n                                    <label htmlFor=\"category-2\">Category 2</label>\r\n                                </div>\r\n                                <div className=\"category\">\r\n                                    <input type=\"checkbox\" id=\"category-3\" \r\n                                        onChange={() => setNewsAnnouncement(prevState => ({...newsAnnouncement, category3Selected: !prevState.category3Selected}))}\r\n                                    />\r\n                                    <label htmlFor=\"category-3\">Category 3</label>\r\n                                </div>\r\n                                <div className=\"category\">\r\n                                    <input type=\"checkbox\" id=\"category-4\" \r\n                                        onChange={() => setNewsAnnouncement(prevState => ({...newsAnnouncement, category4Selected: !prevState.category4Selected}))}\r\n                                    />\r\n                                    <label htmlFor=\"category-4\">Category 4</label>\r\n                                </div>\r\n                            </div>\r\n                            <button className=\"edit-modal-button\">Create Post</button>\r\n                            <button className=\"edit-modal-button\" onClick={() => setCreateModalState(false)}>Cancel</button>\r\n                        </form>\r\n                    </ModalContent>\r\n                </Modal>\r\n            </SearchSection>\r\n            {currentAnnouncements && \r\n                <NewsSection variants={fade}>\r\n                    {currentAnnouncements.map(newsItem => {\r\n                        return (\r\n                            <NewsSummary newsItem={newsItem} key={newsItem.id} />\r\n                        )\r\n                    })}\r\n                    {/* Pagination Component */}\r\n                    {!searchAnnouncement &&\r\n                        <Pagination\r\n                            postsPerPage={postsPerPage}\r\n                            totalPosts={selectedCategory === \"All\" ? newsItems.length : categoryLength}\r\n                            paginate={paginate}\r\n                            currentPage={currentPage}\r\n                        />\r\n                    }\r\n                </NewsSection>\r\n            }\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\n// Styled Components + Color Variables\r\nconst dividerColor = \"#E63946\"\r\nconst boxBorder = \"#1D3557\";\r\nconst loadingButton = \"#C7D1C4\";\r\n\r\nconst MainContainer = styled.div`\r\n    min-height: 90vh;\r\n    padding: 5rem 10rem;\r\n    @media (max-width: 1090px) {\r\n        padding: 2rem 2rem;\r\n    }\r\n`\r\nconst Hide = styled.div`\r\n    margin-bottom: 5rem;\r\n    overflow: hidden;\r\n    @media (max-width: 870px) {\r\n        margin-bottom: 2rem;\r\n    }\r\n`\r\nconst HeaderSection = styled(motion.div)`\r\n    .divider {\r\n        width: 100%;\r\n        height: 0.3rem;\r\n        background: ${dividerColor};\r\n    }\r\n    #profile-link {\r\n        color: ${dividerColor};\r\n        &:hover {\r\n            font-weight: bold;\r\n        }\r\n    }\r\n    @media (max-width: 870px) {\r\n        h2 {\r\n            font-size: 2rem;\r\n        }\r\n    }\r\n`\r\nconst NewsSection = styled(motion.div)`\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n`\r\nconst LoadingContainer = styled.div`\r\n    height: 90vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    img {\r\n        margin: 2rem auto;\r\n        width: 150px;\r\n        height: 150px;\r\n    }\r\n    h4 {\r\n        margin: 0 auto;\r\n    }\r\n`\r\nconst SearchSection = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 1rem 2rem;\r\n    #loading-button {\r\n        display: flex;\r\n        align-items: center;\r\n        button#posting-announcement {\r\n            font-weight: bold;\r\n            cursor: progress;\r\n            border: 3px solid ${loadingButton};\r\n            background: ${loadingButton};\r\n            color: black;\r\n        }\r\n        img {\r\n            width: 50px;\r\n            height: 50px;\r\n        }\r\n        @media (max-width: 870px) {\r\n            flex-direction: column;\r\n            margin-bottom: 1rem;\r\n            button#posting-announcement {\r\n                margin-bottom: 1rem;\r\n            }\r\n        }\r\n    }\r\n    input {\r\n        display: block;\r\n        width: 60%;\r\n        font-size: 1.5rem;\r\n        padding: 0.5rem;\r\n        border: 2px solid ${boxBorder};\r\n        outline: none;\r\n    }\r\n    select {\r\n        padding: 0.5rem;\r\n        border: 2px solid ${boxBorder};\r\n    }\r\n    @media (max-width: 1100px) {\r\n        input {\r\n            width: 50%;\r\n            margin-bottom: 1rem;\r\n        }\r\n    }\r\n    @media (max-width: 870px) {\r\n        flex-direction: column;\r\n        button {\r\n            margin-bottom: 1.5rem;\r\n        }\r\n        input {\r\n            width: 100%;\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n`\r\nconst ModalContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    button.delete-modal-button {\r\n        width: 50%;\r\n        margin: 0.5rem 0;\r\n        @media (max-width: 870px) {\r\n            width: 100%;\r\n        }\r\n    }\r\n    button.edit-modal-button {\r\n        width: 40%;\r\n        margin: 0.5rem 5%;\r\n        @media (max-width: 870px) {\r\n            width: 100%;\r\n            margin: 0.5rem 0;\r\n        }\r\n    }\r\n    .modal-text {\r\n        margin-bottom: 1rem;\r\n    }\r\n    form {\r\n        width: 100%;\r\n        input[type=text] {\r\n            display: block;\r\n            width: 100%;\r\n            margin-bottom: 1rem;\r\n            font-size: 1.5rem;\r\n            padding: 0.5rem;\r\n            border: 2px solid ${boxBorder};\r\n            outline: none;\r\n        }\r\n        input[type=file] {\r\n            border: none;\r\n        }\r\n        .post-categories {\r\n            margin: 2rem 0;\r\n            display: flex;\r\n            .category {\r\n                margin-right: 1.5rem;\r\n                cursor: pointer;\r\n                input, label {\r\n                    cursor: pointer;\r\n                }\r\n                input {\r\n                    margin-right: 0.5rem;\r\n                }\r\n            }\r\n            @media (max-width: 870px) {\r\n                flex-direction: column;\r\n                align-items: center;\r\n                .category {\r\n                    margin-bottom: 1rem;\r\n                }\r\n            }\r\n        }\r\n        @media (max-width: 870px) {\r\n            input[type=text] {\r\n                font-size: 1rem;\r\n            }\r\n        }\r\n    }\r\n`\r\nconst RichContent = styled.div`\r\n    h1, h2, h3, h4, h5, p {\r\n        color: black;\r\n        padding: 0;\r\n        margin: 0;\r\n        font-weight: light;\r\n    }\r\n    ol, ul {\r\n        margin-left: 2rem;\r\n        li {\r\n            font-size: 1.4rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport default NewsList;","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\actions\\NewsActions.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-faq\\FaqSection.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\SignedOutLinks.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\SignedInLinks.js",["171","172"],"// The list of navigation links for when a user is signed in\r\n\r\n// Functional Imports\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signOutUser } from \"../../../redux-store/actions/AuthActions\";\r\n// Component Imports\r\nimport { Link } from \"react-router-dom\";\r\n// Icon Imports\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as ImIcons from \"react-icons/im\";\r\nimport * as MdIcons from \"react-icons/md\";\r\nimport * as Ionicons from \"react-icons/io\";\r\n// Styling + Animation Imports\r\nimport styled from \"styled-components\";\r\n\r\nconst SignedInLinks = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Selecting Redux State\r\n  const profileData = useSelector((state) => state.firebase.profile);\r\n  const emailCredential = useSelector((state) => state.firebase.auth.email);\r\n  \r\n  // Functions\r\n  const handleSignOut = () => {\r\n    dispatch(signOutUser());\r\n  };\r\n  \r\n  return (\r\n    <ListContainer>\r\n      <li>\r\n        <div className=\"credential-container\">\r\n          <span className=\"credential\" id=\"user-name\">\r\n            {profileData.firstName} {profileData.lastName}\r\n          </span>\r\n          <span className=\"credential\">{emailCredential}</span>\r\n        </div>\r\n      </li>\r\n      {/* Each li below is a nav element */}\r\n      <li>\r\n        {/* Link: Home Page */}\r\n        <Link to=\"/\">\r\n          <AiIcons.AiFillHome />\r\n          <span>Home</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Link: FAQ Page */}\r\n        <Link to=\"/faq\">\r\n          <AiIcons.AiOutlineQuestionCircle />\r\n          <span>FAQ</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Link: News Reports Page */}\r\n        <Link to=\"/news\">\r\n          <AiIcons.AiOutlineAlert />\r\n          <span>News Reports</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/brgyforms\">\r\n          <Ionicons.IoIosPaper />\r\n          <span>Registration Forms</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Link: Profile Page */}\r\n        {/* NOTE: Profile Page only visible when user is logged in */}\r\n        <Link to=\"/my-profile\">\r\n          <MdIcons.MdPerson />\r\n          <span>My Profile</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Log out option to sign user out */}\r\n        <a onClick={handleSignOut}>\r\n          <ImIcons.ImExit />\r\n          <span>Log Out</span>\r\n        </a>\r\n      </li>\r\n    </ListContainer>\r\n  );\r\n};\r\n\r\n// Styled Components + Color Variables\r\nconst itemColor = \"#F1FAEE\";\r\nconst credentialColor = \"#F1FAEE\";\r\nconst hoverBackgroundColor = \"#A8DADC\";\r\nconst hoverItemColor = \"#031926\";\r\n\r\nconst ListContainer = styled.div`\r\n  li {\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    padding: 8px 0px 8px 16px;\r\n    list-style: none;\r\n    height: 60px;\r\n    a {\r\n      text-decoration: none;\r\n      color: ${itemColor};\r\n      font-size: 1.2rem;\r\n      width: 95%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 0 1.2rem;\r\n      border-radius: 4px;\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: ${hoverBackgroundColor};\r\n        span {\r\n          color: ${hoverItemColor};\r\n          font-weight: bold;\r\n        }\r\n      }\r\n    }\r\n    span {\r\n      margin-left: 1rem;\r\n      color: ${itemColor};\r\n    }\r\n    .credential-container {\r\n      .credential {\r\n        color: ${credentialColor};\r\n        display: block;\r\n        margin-bottom: 0.5rem;\r\n        margin-left: 0rem;\r\n      }\r\n      #user-name {\r\n        font-size: 1.2rem;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default SignedInLinks;\r\n","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\DropToggle.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\CouncilData.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-news\\Pagination.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-news\\NewsSummary.js",["173","174"],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-faq\\FaqData.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\FeaturesIntro.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\AdminLinks.js",["175","176"],"// The list of navigation links for when the admin is signed in\r\n\r\n// Functional Imports\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signOutUser } from \"../../../redux-store/actions/AuthActions\";\r\n// Component Imports\r\nimport { Link } from \"react-router-dom\";\r\n// Icon Imports\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as ImIcons from \"react-icons/im\";\r\nimport * as MdIcons from \"react-icons/md\";\r\nimport * as Ionicons from \"react-icons/io\";\r\n// Styling + Animation Imports\r\nimport styled from \"styled-components\";\r\n\r\nconst AdminLinks = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Selecting Redux State\r\n  const profileData = useSelector((state) => state.firebase.profile);\r\n  const emailCredential = useSelector((state) => state.firebase.auth.email);\r\n  \r\n  // Functions\r\n  const handleSignOut = () => {\r\n    dispatch(signOutUser());\r\n  };\r\n  \r\n  return (\r\n    <ListContainer>\r\n      <li>\r\n        <div className=\"credential-container\">\r\n          <span className=\"credential\" id=\"user-name\">\r\n            {profileData.firstName} {profileData.lastName}\r\n          </span>\r\n          <span className=\"credential\">{emailCredential}</span>\r\n        </div>\r\n      </li>\r\n      {/* Each li below is a nav element */}\r\n      <li>\r\n        {/* Link: Home Page */}\r\n        <Link to=\"/\">\r\n          <AiIcons.AiFillHome />\r\n          <span>Home</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Link: FAQ Page */}\r\n        <Link to=\"/faq\">\r\n          <AiIcons.AiOutlineQuestionCircle />\r\n          <span>FAQ</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Link: News Reports Page */}\r\n        <Link to=\"/news\">\r\n          <AiIcons.AiOutlineAlert />\r\n          <span>News Reports</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/brgyforms\">\r\n          <Ionicons.IoIosPaper />\r\n          <span>Registration Forms</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Link: Profile Page */}\r\n        {/* NOTE: Profile Page only visible when user is logged in */}\r\n        <Link to=\"/my-profile\">\r\n          <MdIcons.MdPerson />\r\n          <span>My Profile</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Link: Sign Up Page */}\r\n        <Link to='/sign-up'>\r\n          <MdIcons.MdPersonAdd />\r\n          <span>Sign Up User</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Log out option to sign user out */}\r\n        <a onClick={handleSignOut}>\r\n          <ImIcons.ImExit />\r\n          <span>Log Out</span>\r\n        </a>\r\n      </li>\r\n    </ListContainer>\r\n  );\r\n};\r\n\r\n// Styled Components + Color Variables\r\nconst itemColor = \"#F1FAEE\";\r\nconst credentialColor = \"#F1FAEE\";\r\nconst hoverBackgroundColor = \"#A8DADC\";\r\nconst hoverItemColor = \"#031926\";\r\n\r\nconst ListContainer = styled.div`\r\n  li {\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    padding: 8px 0px 8px 16px;\r\n    list-style: none;\r\n    height: 60px;\r\n    a {\r\n      text-decoration: none;\r\n      color: ${itemColor};\r\n      font-size: 1.2rem;\r\n      width: 95%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 0 1.2rem;\r\n      border-radius: 4px;\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: ${hoverBackgroundColor};\r\n        span {\r\n          color: ${hoverItemColor};\r\n          font-weight: bold;\r\n        }\r\n      }\r\n    }\r\n    span {\r\n      margin-left: 1rem;\r\n      color: ${itemColor};\r\n    }\r\n    .credential-container {\r\n      .credential {\r\n        color: ${credentialColor};\r\n        display: block;\r\n        margin-bottom: 0.5rem;\r\n        margin-left: 0rem;\r\n      }\r\n      #user-name {\r\n        font-size: 1.2rem;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default AdminLinks;\r\n",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":66,"column":66,"nodeType":"183","messageId":"184","endLine":66,"endColumn":68},{"ruleId":"181","severity":1,"message":"182","line":67,"column":87,"nodeType":"183","messageId":"184","endLine":67,"endColumn":89},{"ruleId":"185","severity":1,"message":"186","line":7,"column":21,"nodeType":"187","messageId":"188","endLine":7,"endColumn":32},{"ruleId":"177","replacedBy":"189"},{"ruleId":"179","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":112,"column":35,"nodeType":"193","messageId":"194","endLine":112,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":119,"column":35,"nodeType":"193","messageId":"194","endLine":119,"endColumn":37},{"ruleId":"195","severity":1,"message":"196","line":121,"column":13,"nodeType":"187","messageId":"197","endLine":121,"endColumn":27},{"ruleId":"191","severity":1,"message":"192","line":126,"column":35,"nodeType":"193","messageId":"194","endLine":126,"endColumn":37},{"ruleId":"195","severity":1,"message":"196","line":128,"column":13,"nodeType":"187","messageId":"197","endLine":128,"endColumn":27},{"ruleId":"191","severity":1,"message":"192","line":133,"column":35,"nodeType":"193","messageId":"194","endLine":133,"endColumn":37},{"ruleId":"195","severity":1,"message":"196","line":135,"column":13,"nodeType":"187","messageId":"197","endLine":135,"endColumn":27},{"ruleId":"185","severity":1,"message":"198","line":11,"column":13,"nodeType":"187","messageId":"188","endLine":11,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":80,"column":9,"nodeType":"201","endLine":80,"endColumn":36},{"ruleId":"181","severity":1,"message":"182","line":130,"column":53,"nodeType":"183","messageId":"184","endLine":130,"endColumn":55},{"ruleId":"181","severity":1,"message":"182","line":131,"column":74,"nodeType":"183","messageId":"184","endLine":131,"endColumn":76},{"ruleId":"185","severity":1,"message":"198","line":11,"column":13,"nodeType":"187","messageId":"188","endLine":11,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":87,"column":9,"nodeType":"201","endLine":87,"endColumn":36},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-unused-vars","'verifyEmail' is defined but never used.","Identifier","unusedVar",["202"],["203"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'categoryLength' is already defined.","redeclared","'FaIcons' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]