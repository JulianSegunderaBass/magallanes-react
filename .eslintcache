[{"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\index.js":"1","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\reportWebVitals.js":"2","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\config\\FirebaseConfig.js":"3","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\App.js":"4","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\reducers\\RootReducer.js":"5","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\Landing.js":"6","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\AnnouncementDetails.js":"7","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\reducers\\NewsReducer.js":"8","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\reducers\\AuthReducer.js":"9","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\ProfilePage.js":"10","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\auth\\SignUp.js":"11","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\NewsForm.js":"12","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\auth\\SignIn.js":"13","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\NewsPage.js":"14","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\FAQ.js":"15","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\BrgyForms.js":"16","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\assets\\GlobalStyle.js":"17","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\SideNav.js":"18","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\Footer.js":"19","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\assets\\AutoScroll.js":"20","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\Statements.js":"21","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\AboutUs.js":"22","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\assets\\Animations.js":"23","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\actions\\AuthActions.js":"24","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\Council.js":"25","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-news\\NewsList.js":"26","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\actions\\NewsActions.js":"27","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-faq\\FaqSection.js":"28","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\SignedOutLinks.js":"29","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\SignedInLinks.js":"30","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\DropToggle.js":"31","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\CouncilData.js":"32","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-news\\Pagination.js":"33","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-news\\NewsSummary.js":"34","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-faq\\FaqData.js":"35"},{"size":2116,"mtime":1612195394683,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":869,"mtime":1612849628949,"results":"39","hashOfConfig":"37"},{"size":2720,"mtime":1613650912535,"results":"40","hashOfConfig":"37"},{"size":681,"mtime":1611997054815,"results":"41","hashOfConfig":"37"},{"size":974,"mtime":1608035119774,"results":"42","hashOfConfig":"37"},{"size":6929,"mtime":1614444665173,"results":"43","hashOfConfig":"37"},{"size":5052,"mtime":1614350316261,"results":"44","hashOfConfig":"37"},{"size":9145,"mtime":1614487326523,"results":"45","hashOfConfig":"37"},{"size":5424,"mtime":1614487038528,"results":"46","hashOfConfig":"37"},{"size":4386,"mtime":1614153818588,"results":"47","hashOfConfig":"37"},{"size":7026,"mtime":1614442949846,"results":"48","hashOfConfig":"37"},{"size":3821,"mtime":1614153827833,"results":"49","hashOfConfig":"37"},{"size":1082,"mtime":1613221994758,"results":"50","hashOfConfig":"37"},{"size":692,"mtime":1613650912551,"results":"51","hashOfConfig":"37"},{"size":813,"mtime":1613651663102,"results":"52","hashOfConfig":"37"},{"size":2328,"mtime":1614442252945,"results":"53","hashOfConfig":"37"},{"size":3958,"mtime":1613478617753,"results":"54","hashOfConfig":"37"},{"size":2673,"mtime":1612445191636,"results":"55","hashOfConfig":"37"},{"size":644,"mtime":1607859371797,"results":"56","hashOfConfig":"37"},{"size":3154,"mtime":1612445191603,"results":"57","hashOfConfig":"37"},{"size":2933,"mtime":1612438364767,"results":"58","hashOfConfig":"37"},{"size":2400,"mtime":1614150367995,"results":"59","hashOfConfig":"37"},{"size":4725,"mtime":1614487125802,"results":"60","hashOfConfig":"37"},{"size":3553,"mtime":1612445191591,"results":"61","hashOfConfig":"37"},{"size":4845,"mtime":1614156086983,"results":"62","hashOfConfig":"37"},{"size":7952,"mtime":1614393798445,"results":"63","hashOfConfig":"37"},{"size":3378,"mtime":1612445191567,"results":"64","hashOfConfig":"37"},{"size":2825,"mtime":1612445191644,"results":"65","hashOfConfig":"37"},{"size":3968,"mtime":1613650912551,"results":"66","hashOfConfig":"37"},{"size":1526,"mtime":1612445191626,"results":"67","hashOfConfig":"37"},{"size":2863,"mtime":1611473212779,"results":"68","hashOfConfig":"37"},{"size":1313,"mtime":1614156070386,"results":"69","hashOfConfig":"37"},{"size":13280,"mtime":1614444912141,"results":"70","hashOfConfig":"37"},{"size":887,"mtime":1609656288817,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"120cpkz",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\index.js",[],["152","153"],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\reportWebVitals.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\config\\FirebaseConfig.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\App.js",["154","155"],"// The Root App component which renders the pages and global components\r\n\r\nimport React from \"react\";\r\n// Importing Pages\r\nimport Landing from \"./pages/Landing\";\r\nimport FAQ from \"./pages/FAQ\";\r\nimport NewsPage from \"./pages/NewsPage\";\r\nimport NewsForm from \"./pages/NewsForm\";\r\nimport AnnouncementDetails from \"./pages/AnnouncementDetails\";\r\nimport SignIn from \"./pages/auth/SignIn\";\r\nimport SignUp from \"./pages/auth/SignUp\";\r\nimport ProfilePage from \"./pages/ProfilePage\";\r\nimport BrgyForms from \"./pages/BrgyForms\";\r\n// Importing Footer\r\nimport Footer from \"./components/global/Footer\";\r\n// Importing Side Navigation\r\nimport SideNav from \"./components/global/navigation/SideNav\";\r\n// Importing Global Styling\r\nimport GlobalStyle from \"./assets/GlobalStyle\";\r\n// Router Imports\r\nimport { Switch, Route, useLocation } from \"react-router-dom\";\r\n// Importing Animations\r\n// Animate Presence helps React detect when a component\r\n// is removed from the tree - exit animations\r\n// Also requires \"useLocation\" from React Router Dom\r\nimport { AnimatePresence } from \"framer-motion\";\r\n// Redux Functions\r\nimport { useSelector } from \"react-redux\";\r\n// React Notification Import with Styling\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\n\r\nfunction App() {\r\n  const currentLocation = useLocation();\r\n\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n\r\n  return (\r\n    // React Router is not very specific with paths.\r\n    // Use Switch Component.\r\n    // Note: The Navbar and Footer stay constant on all paths\r\n    <div className=\"App\">\r\n      <GlobalStyle />\r\n      <SideNav />\r\n      <ReactNotification />\r\n      {/* Wrapping the Switch with Animate Presence */}\r\n      {/* exitBeforeEnter says to wait until current component \r\n            is closed before animating the next component */}\r\n      {/* location and pathname needed for Animate Presence */}\r\n      <Switch location={currentLocation} key={currentLocation.pathname}>\r\n        <Route path=\"/\" component={Landing} exact />\r\n        <Route path=\"/faq\" component={FAQ} exact />\r\n        <Route path=\"/news\" component={NewsPage} exact />\r\n        <Route path=\"/create-news-announcement\" component={NewsForm} exact />\r\n        <Route\r\n          path=\"/news-announcement/:id\"\r\n          component={AnnouncementDetails}\r\n          exact\r\n        />\r\n        <Route path=\"/sign-in\" component={SignIn} exact />\r\n        <Route path=\"/sign-up\" component={SignUp} exact />\r\n        <Route path=\"/my-profile\" component={ProfilePage} exact />\r\n        <Route path=\"/brgyforms\" component={BrgyForms} exact />\r\n      </Switch>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\reducers\\RootReducer.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\Landing.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\AnnouncementDetails.js",["156","157"],"// Details page for an announcement\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components'\r\n// Animations\r\nimport { motion } from 'framer-motion';\r\nimport { pageLoad, fade, imageAnim } from '../assets/Animations';\r\n// Redux\r\nimport { useSelector } from 'react-redux';\r\n// Importing Moment.js for created date\r\nimport moment from 'moment';\r\n// For card link\r\nimport { Link } from 'react-router-dom';\r\n// Importing AutoScroll\r\nimport AutoScroll from '../assets/AutoScroll';\r\n// For parsing HTML markup\r\nimport ReactHtmlParser from 'react-html-parser';\r\n// Importing Modal\r\nimport Modal from 'react-modal';\r\n// Testing CSS import\r\nimport '../assets/ModalStyle.css';\r\n\r\n\r\nconst AnnouncementDetails = (props) => {\r\n    const NewsAnnouncements = useSelector((state) => state.firestore.data.NewsAnnouncements);\r\n    const [imageModalState, setImageModalState] = useState(false);\r\n    // Matching route ID with data from state\r\n    const id = props.match.params.id; \r\n    const NewsItem = NewsAnnouncements ? NewsAnnouncements[id] : null;\r\n    return (\r\n        <MainContainer variants={pageLoad} initial=\"hidden\" animate=\"show\" exit=\"exit\">\r\n            <AutoScroll />\r\n            {NewsItem &&\r\n                <Card>\r\n                    <motion.div variants={fade}>\r\n                        <h4>{NewsItem.heading}</h4>\r\n                        {/* Using Moment.js to parse createdAt property to readable date */}\r\n                        <h5>{moment(NewsItem.createdAt.toDate()).calendar()}</h5>\r\n                        <div className=\"sender-info\">\r\n                            <h5>Posted By:</h5>\r\n                            <h5>{NewsItem.authorFirstName} {NewsItem.authorLastName}</h5>\r\n                            <h5 id=\"sender-email\">{NewsItem.authorEmail}</h5>\r\n                    </div>\r\n                    </motion.div>\r\n                    <div className=\"divider\"></div>\r\n                    {/* Section for rich text content */}\r\n                    <RichContent>\r\n                        {ReactHtmlParser(NewsItem.body)}\r\n                    </RichContent>\r\n                    {/* If attachment is detected, rendered here */}\r\n                    {NewsItem.attachmentURL &&\r\n                        NewsItem.attachmentType === 'image/jpeg' || NewsItem.attachmentType === 'image/png' ?\r\n                            <Image>\r\n                                <motion.img variants={imageAnim} src={NewsItem.attachmentURL} alt={NewsItem.attachmentName} onClick={() => setImageModalState(true)}/>\r\n                            </Image>\r\n                        :   \r\n                            NewsItem.attachmentType === 'application/pdf' || NewsItem.attachmentType === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ?\r\n                                    <a id=\"media-link\" href={NewsItem.attachmentURL} download>{NewsItem.attachmentName}</a>\r\n                                :\r\n                                    ''\r\n                    }\r\n                    <Link to=\"/news\" id=\"return-link\">View other announcements</Link>\r\n\r\n                    {/* Image Modal */}\r\n                    <Modal\r\n                        isOpen={imageModalState}\r\n                        onRequestClose={() => setImageModalState(false)}\r\n                        className=\"attachment-modal\"\r\n                        overlayClassName=\"attachment-modal-overlay\"\r\n                    >\r\n                        <div className=\"attachment-container\">\r\n                            <img variants={imageAnim} src={NewsItem.attachmentURL} alt={NewsItem.attachmentName}/>\r\n                        </div>\r\n                    </Modal>\r\n                </Card>\r\n            }\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\n// Color Variables\r\nconst cardBackground = \"#C7D1C4\";\r\nconst dividerColor = \"#E63946\"\r\nconst mainBackground = \"#F1FAEE\";\r\nconst mainFontColor = \"#1D3557\";\r\nconst accentColor = \"#E63946\";\r\n\r\n// Styled Components\r\n\r\nconst MainContainer = styled(motion.div)`\r\n    padding: 5rem 7rem;\r\n    min-height: 90vh;\r\n    @media (max-width: 1090px) {\r\n        padding: 2rem 2rem;\r\n    }\r\n`\r\n\r\nconst Card = styled.div`\r\n    padding: 2.5rem 5rem;\r\n    background: ${cardBackground};\r\n    border-radius: 2rem;\r\n    h4, h5 {\r\n        font-weight: bold;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    h5 {\r\n        font-size: 1.2rem;\r\n    }\r\n    p {\r\n        font-weight: lighter;\r\n    }\r\n    .divider {\r\n        width: 100%;\r\n        height: 0.2rem;\r\n        background: ${dividerColor};\r\n    }\r\n    a#return-link {\r\n        display: block;\r\n        width: 35%;\r\n        text-decoration: none;\r\n        text-align: center;\r\n        margin: 1rem auto;\r\n        font-weight: bold;\r\n        font-size: 1.1rem;\r\n        cursor: pointer;\r\n        padding: 1rem 2rem;\r\n        border: 3px solid ${accentColor};\r\n        border-radius: 1rem;\r\n        background: transparent;\r\n        color: ${mainFontColor};\r\n        /* Adding a transition for hover */\r\n        transition: all 0.5s ease;\r\n        font-family: 'Inter', sans-serif;\r\n        &:hover {\r\n            background-color: ${accentColor};\r\n            color: ${mainBackground};\r\n        }\r\n    }\r\n    a#media-link {\r\n        display: block;\r\n        width: 20%;\r\n        text-decoration: none;\r\n        text-align: center;\r\n        font-weight: bold;\r\n        font-size: 0.7rem;\r\n        cursor: pointer;\r\n        padding: 0.5rem 1rem;\r\n        border: 1.5px solid ${accentColor};\r\n        border-radius: 0.5rem;\r\n        background: transparent;\r\n        color: ${mainFontColor};\r\n        /* Adding a transition for hover */\r\n        transition: all 0.5s ease;\r\n        font-family: 'Inter', sans-serif;\r\n        &:hover {\r\n            background-color: ${accentColor};\r\n            color: ${mainBackground};\r\n        }\r\n    }\r\n    .sender-info {\r\n        margin: 1rem 0;\r\n        h5 {\r\n            font-weight: lighter;\r\n        }\r\n        #sender-email {\r\n            font-style: italic;\r\n            word-break: break-all;\r\n        }\r\n    }\r\n    @media (max-width: 870px) {\r\n        padding: 2rem 1.2rem;\r\n        h4 {\r\n            font-size: 1.5rem;\r\n        }\r\n        a#return-link, a#media-link {\r\n            width: 100%;\r\n        }\r\n    }\r\n`\r\n\r\nconst RichContent = styled.div`\r\n    margin: 2rem 0;\r\n    h1, h2, h3, h4, h5, p {\r\n        color: ${mainFontColor};\r\n        padding: 0;\r\n        margin: 0;\r\n        font-weight: light;\r\n    }\r\n    ol, ul {\r\n        color: ${mainFontColor};\r\n        margin-left: 2rem;\r\n        li {\r\n            font-size: 1.2rem;\r\n        }\r\n    }\r\n`\r\n\r\nconst Image = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    img {\r\n        width: 50%;\r\n        object-fit: contain;\r\n        @media (max-width: 870px) {\r\n            width: 100%;\r\n        }\r\n    }\r\n`\r\n\r\nexport default AnnouncementDetails;","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\reducers\\NewsReducer.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\reducers\\AuthReducer.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\ProfilePage.js",["158"],"// Page for displaying profile information + benefits\r\n\r\nimport React, { useState } from 'react';\r\n// Importing Styled Components\r\nimport styled from 'styled-components';\r\n// Importing Framer Motion and Animations\r\nimport { motion } from 'framer-motion';\r\nimport { imageAnim } from '../assets/Animations';\r\nimport { pageLoad, revealUp } from '../assets/Animations';\r\n// Importing AutoScroll function\r\nimport AutoScroll from '../assets/AutoScroll';\r\n// Redux Imports\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetPass } from '../redux-store/actions/AuthActions';\r\nimport { setProfileImage } from '../redux-store/actions/AuthActions';\r\n// Importing Redirect Component\r\nimport { Redirect } from 'react-router-dom';\r\n// Importing Default Profile\r\nimport ProfilePlaceholder from '../assets/images/ProfilePlaceholder.png'\r\n\r\nconst ProfilePage = () => {\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n    const profileData = useSelector((state) => state.firebase.profile);\r\n    const dispatch = useDispatch();\r\n\r\n    const [profilePhoto, setProfilePhoto] = useState(null);\r\n\r\n    const handleAttachment = (e) => {\r\n        if (e.target.files[0]) {\r\n            setProfilePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(setProfileImage(profilePhoto, auth.uid));\r\n    }\r\n\r\n    const handlePassReset = () => {\r\n        dispatch(resetPass());\r\n    }\r\n\r\n    // If an authentication UID is NOT present (user is not signed in),\r\n    // redirect to home\r\n    if (!auth.uid) {\r\n        return <Redirect to='/' />;\r\n    }\r\n\r\n    return (\r\n        <ProfileContainer\r\n            variants={pageLoad} \r\n            initial=\"hidden\" \r\n            animate=\"show\" \r\n            exit=\"exit\"\r\n        >\r\n            {/* For Auto Scrolling to top */}\r\n            <AutoScroll />\r\n            <ProfilePhoto>\r\n                <Image>\r\n                    {/* Conditionally rendering profile image */}\r\n                    {profileData.profileImageURL ? \r\n                        <motion.img variants={imageAnim} src={profileData.profileImageURL} alt=\"profile-image\" />\r\n                        :\r\n                        <motion.img variants={imageAnim} src={ProfilePlaceholder} alt=\"profile-image\" />\r\n                    }\r\n                </Image>\r\n                <p>Change your Picture</p>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input \r\n                        type=\"file\" \r\n                        accept=\"image/png, image/jpeg\"\r\n                        onChange={handleAttachment}\r\n                    />\r\n                    <button id=\"photo-submit\">Submit</button>\r\n                </form>\r\n            </ProfilePhoto>\r\n            <div>\r\n                <div className=\"divider\"></div>\r\n                <h2><span>Name:</span> {profileData.firstName} {profileData.lastName}</h2>\r\n                <h4><span>Email:</span> <span id=\"email\">{auth.email}</span></h4>\r\n                <div className=\"divider\"></div>\r\n                <h4><span>My Benefits:</span> </h4>\r\n                <ul>\r\n                    <li>{profileData.currentBenefits.benefit_1}</li>\r\n                    <li>{profileData.currentBenefits.benefit_2}</li>\r\n                    <li>{profileData.currentBenefits.benefit_3}</li>\r\n                </ul>\r\n                <div className=\"divider\"></div>\r\n                <h5>You may reset your password here. A message will be sent to your inbox with further instructions.</h5>\r\n                <button onClick={handlePassReset}>Change Password</button>\r\n            </div>\r\n        </ProfileContainer>\r\n    )\r\n}\r\n\r\n// Color Variables\r\nconst mainFontColor = \"#1D3557\";\r\nconst dividerColor = \"#1D3557\";\r\n\r\n// Styled Components\r\n\r\nconst ProfileContainer = styled(motion.div)`\r\n    min-height: 90vh;\r\n    padding: 5rem 10rem;\r\n    display: flex;\r\n    h2, h4, h5 {\r\n        margin-bottom: 1rem;\r\n    }\r\n    ul {\r\n        margin-top: 2rem;\r\n        margin-bottom: 1rem;\r\n        padding: 0 3rem;\r\n        li {\r\n            font-size: 1.8rem;\r\n            color: ${mainFontColor};\r\n        }\r\n    }\r\n    #email {\r\n        color: ${mainFontColor};\r\n    }\r\n    .divider {\r\n        width: 100%;\r\n        height: 0.3rem;\r\n        background: ${dividerColor};\r\n        margin-bottom: 3rem;\r\n    }\r\n    @media (max-width: 1090px) {\r\n        padding: 2rem 2rem;\r\n    }\r\n    @media (max-width: 870px) {\r\n        flex-direction: column;\r\n        h2 {\r\n            font-size: 2rem;\r\n        }\r\n        li {\r\n            font-size: 1.5rem\r\n        }\r\n        #email {\r\n            color: ${mainFontColor};\r\n            font-size: 1.2rem;\r\n        }\r\n        button {\r\n            display: block;\r\n            margin: 0 auto;\r\n        }\r\n    }\r\n`\r\n\r\nconst ProfilePhoto = styled.div`\r\n    margin-right: 2rem;\r\n    width: 30%;\r\n    form {\r\n        display: flex;\r\n        #photo-submit {\r\n            padding: 0.2rem 0.4rem;\r\n            margin: 0;\r\n            width: 30%;\r\n            border-radius: 0.6rem;\r\n        }\r\n    }\r\n    @media (max-width: 870px) {\r\n        width: 100%;\r\n        margin-bottom: 2rem;\r\n    }\r\n`\r\n\r\nconst Image = styled.div`\r\n    margin: 0 auto;\r\n    border-radius: 2rem;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    max-height: 60%;\r\n    img {\r\n        width: 100%;\r\n        object-fit: cover;\r\n    }\r\n`\r\n\r\nexport default ProfilePage;","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\auth\\SignUp.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\NewsForm.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\auth\\SignIn.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\NewsPage.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\FAQ.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\pages\\BrgyForms.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\assets\\GlobalStyle.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\SideNav.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\Footer.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\assets\\AutoScroll.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\Statements.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\AboutUs.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\assets\\Animations.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\actions\\AuthActions.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\Council.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-news\\NewsList.js",["159"],"// Component holding list of news announcements\r\n\r\nimport React, { useState } from 'react';\r\n// Importing Components\r\nimport NewsSummary from './NewsSummary';\r\nimport Pagination from './Pagination';\r\n// Importing Loading Spinner\r\nimport ReactSpinner from '../../assets/images/ReactSpinner.gif';\r\n// Importing Styled Components\r\nimport styled from 'styled-components';\r\n// Importing Framer Motion and Animations\r\nimport { motion } from 'framer-motion';\r\nimport { strongRevealUp, fade } from '../../assets/Animations';\r\n// For card link\r\nimport { Link } from 'react-router-dom';\r\n\r\n// News Items is an array of objects\r\nconst NewsList = ({newsItems}) => {\r\n    // Pagination Variables\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(5);\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    // Slicing initial state of News Items\r\n    let initialCurrentAnnouncements = newsItems && newsItems.slice(indexOfFirstPost, indexOfLastPost);\r\n    let currentAnnouncements = initialCurrentAnnouncements;\r\n\r\n    // Function to change page number on click\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    const [searchAnnouncement, setSearchAnnouncement] = useState(\"\");\r\n\r\n    if (searchAnnouncement) {\r\n        let filteredNewsItems = newsItems.filter(item => {\r\n            return (item.heading.toLowerCase()).includes(searchAnnouncement.toLowerCase()) || (item.body.toLowerCase()).includes(searchAnnouncement.toLowerCase());\r\n        });\r\n        currentAnnouncements = filteredNewsItems;\r\n    } else {\r\n        currentAnnouncements = initialCurrentAnnouncements;\r\n    }\r\n\r\n    // While the list of News Announcements is not available,\r\n    // Render out loading spinner gif\r\n    if (!currentAnnouncements) {\r\n        return (\r\n            <LoadingContainer>\r\n                <img src={ReactSpinner} alt=\"Loading Spinner\" />\r\n                <h4>Loading Announcements</h4>\r\n            </LoadingContainer>\r\n        )\r\n    }\r\n\r\n    // Render main content when News Announcements are available\r\n    return (\r\n        <MainContainer>\r\n            <Hide>\r\n                <HeaderSection variants={strongRevealUp}>\r\n                    <h2>Browse the latest updates from Barangay</h2>\r\n                    <div className=\"divider\"></div>\r\n                </HeaderSection>\r\n            </Hide>\r\n            <SearchSection>\r\n                <input type=\"text\" placeholder=\"Search an Announcement\" onChange={e => setSearchAnnouncement(e.target.value)} />\r\n            </SearchSection>\r\n            {currentAnnouncements && \r\n                <NewsSection variants={fade}>\r\n                    {currentAnnouncements.map(newsItem => {\r\n                        return (\r\n                            <NewsSummary newsItem={newsItem} key={newsItem.id} />\r\n                        )\r\n                    })}\r\n                    {/* Pagination Component */}\r\n                    {!searchAnnouncement &&\r\n                        <Pagination\r\n                            postsPerPage={postsPerPage}\r\n                            totalPosts={newsItems.length}\r\n                            paginate={paginate}\r\n                            currentPage={currentPage}\r\n                        />\r\n                    }\r\n                </NewsSection>\r\n            }\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\n// Color Variables\r\nconst dividerColor = \"#E63946\"\r\nconst boxBorder = \"#1D3557\";\r\n\r\n// Styled Components\r\n\r\nconst MainContainer = styled.div`\r\n    min-height: 90vh;\r\n    padding: 5rem 10rem;\r\n    @media (max-width: 1090px) {\r\n        padding: 2rem 2rem;\r\n    }\r\n`\r\nconst Hide = styled.div`\r\n    margin-bottom: 5rem;\r\n    overflow: hidden;\r\n    @media (max-width: 870px) {\r\n        margin-bottom: 2rem;\r\n    }\r\n`\r\n\r\nconst HeaderSection = styled(motion.div)`\r\n    h2 {\r\n        margin-bottom: 1rem;\r\n    }\r\n    .divider {\r\n        width: 100%;\r\n        height: 0.3rem;\r\n        background: ${dividerColor};\r\n    }\r\n    @media (max-width: 870px) {\r\n        h2 {\r\n            font-size: 2rem;\r\n        }\r\n    }\r\n`\r\n\r\n\r\nconst NewsSection = styled(motion.div)`\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n`\r\n\r\nconst LoadingContainer = styled.div`\r\n    height: 90vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    img {\r\n        margin: 2rem auto;\r\n        width: 150px;\r\n        height: 150px;\r\n    }\r\n    h4 {\r\n        margin: 0 auto;\r\n    }\r\n`\r\n\r\nconst SearchSection = styled.div`\r\n    input {\r\n        display: block;\r\n        width: 50%;\r\n        margin: 0 auto 2rem auto;\r\n        font-size: 1.5rem;\r\n        padding: 0.5rem;\r\n        border: 2px solid ${boxBorder};\r\n        outline: none;\r\n    }\r\n    @media (max-width: 870px) {\r\n        input {\r\n            width: 100%;\r\n        }\r\n    }\r\n`\r\n\r\nexport default NewsList;","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\redux-store\\actions\\NewsActions.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-faq\\FaqSection.js",["160"],"// The list of FAQs on the FAQ page\r\n\r\nimport React, { useState } from 'react';\r\n// Importing Styled Components\r\nimport styled from 'styled-components';\r\n// Importing \"DropToggle\" Component for toggling functionality\r\nimport DropToggle from '../global/DropToggle';\r\n// Importing \"AnimateSharedLayout\" - detects a change with the toggling\r\nimport { AnimateSharedLayout } from 'framer-motion';\r\n// Importing FAQ Questions Data\r\nimport { FaqData } from './FaqData';\r\n\r\nconst FaqSection = () => {\r\n\r\n    // State\r\n    // Creating a \"questions\" state holding all the FAQ Data\r\n    const [questions, setQuestions] = useState(FaqData);\r\n    // Creating state for the search term\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    // A variable for the filtered FAQ list holding the search term\r\n    const filteredFAQ = questions.filter(question => {\r\n        return question.faqTitle.toLowerCase().includes(searchTerm.toLowerCase())\r\n    });\r\n\r\n    return (\r\n        <FaqSectionStyle>\r\n            {/* Any changes to the input are set as the search term state */}\r\n            <input type=\"text\" placeholder=\"Search an FAQ\" onChange={e => setSearchTerm(e.target.value)} />\r\n            <AnimateSharedLayout>\r\n                {/* Each DropToggle element is a clickable dropdown section */}\r\n                {/* This function maps through the filtered questions state \r\n                which gets data from the FAQ Data JS file,\r\n                and returns a styled toggle component with that specific\r\n                array object's information and index. */}\r\n                {filteredFAQ.map((question, index) => {\r\n                    return (\r\n                        <DropToggle title={question.faqTitle} key={index}>\r\n                            <div className=\"drop-content\">\r\n                                <p>{question.faqContent}</p>\r\n                            </div>\r\n                        </DropToggle>\r\n                    )\r\n                })}\r\n            </AnimateSharedLayout>\r\n        </FaqSectionStyle>\r\n    )\r\n}\r\n\r\n// Styled Components\r\n// We use the name \"FaqSectionStyle\" because using FaqSection\r\n// would conflict between the FaqSection component and FaqSection\r\n// Styled component\r\n\r\n// Color Variables\r\nconst lineColor = \"#E63946\";\r\nconst boxBorder = \"#1D3557\";\r\n\r\nconst FaqSectionStyle = styled.div`\r\n    min-height: 90vh;\r\n    display: block;\r\n    /* Padding to adjust space around whole component */\r\n    padding: 5rem 10rem;\r\n    /* The \"line\" element under each statement */\r\n    /* These styling lines carry over to DropTogge.js to \r\n    style the elements over there as well */\r\n    .line {\r\n        background: ${lineColor};\r\n        height: 0.2rem;\r\n        margin: 2rem 0rem;\r\n    }\r\n    .toggle-element {\r\n        padding: 1.5rem 0rem;\r\n        cursor: pointer;\r\n    }\r\n    .drop-content {\r\n        padding: 1rem 0rem;\r\n        p {\r\n            padding: 1rem 0rem;\r\n            line-height: 2rem;\r\n        }\r\n    }\r\n    input {\r\n        display: block;\r\n        width: 50%;\r\n        margin: 0 auto 2rem auto;\r\n        font-size: 1.5rem;\r\n        padding: 0.5rem;\r\n        border: 2px solid ${boxBorder};\r\n        outline: none;\r\n    }\r\n    @media (max-width: 870px) {\r\n        input {\r\n            width: 100%;\r\n        }\r\n    }\r\n    @media (max-width: 660px) {\r\n        padding: 2rem 2rem;\r\n    }\r\n`\r\n\r\nexport default FaqSection;","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\SignedOutLinks.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\navigation\\SignedInLinks.js",["161"],"// The list of navigation links for when a user is signed in\r\n\r\nimport React from \"react\";\r\n// Importing Styled Components\r\nimport styled from \"styled-components\";\r\n// Importing all production Icons with code names\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as ImIcons from \"react-icons/im\";\r\nimport * as MdIcons from \"react-icons/md\";\r\nimport * as Ionicons from \"react-icons/io\";\r\n// Link Component\r\nimport { Link } from \"react-router-dom\";\r\n// Importing Redux hooks and actions\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signOutUser } from \"../../../redux-store/actions/AuthActions\";\r\n\r\nconst SignedInLinks = () => {\r\n  const dispatch = useDispatch();\r\n  const handleSignOut = () => {\r\n    dispatch(signOutUser());\r\n  };\r\n\r\n  const profileData = useSelector((state) => state.firebase.profile);\r\n  const emailCredential = useSelector((state) => state.firebase.auth.email);\r\n\r\n  return (\r\n    <ListContainer>\r\n      <li>\r\n        <div className=\"credential-container\">\r\n          <span className=\"credential\" id=\"user-name\">\r\n            {profileData.firstName} {profileData.lastName}\r\n          </span>\r\n          <span className=\"credential\">{emailCredential}</span>\r\n        </div>\r\n      </li>\r\n      {/* Each li below is a nav element */}\r\n      <li>\r\n        {/* Link: Home Page */}\r\n        <Link to=\"/\">\r\n          <AiIcons.AiFillHome />\r\n          <span>Home</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Link: FAQ Page */}\r\n        <Link to=\"/faq\">\r\n          <AiIcons.AiOutlineQuestionCircle />\r\n          <span>FAQ</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Link: News Reports Page */}\r\n        <Link to=\"/news\">\r\n          <AiIcons.AiOutlineAlert />\r\n          <span>News Reports</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Link: News Form Page */}\r\n        {/* NOTE: News Form only visible when user is logged in */}\r\n        <Link to=\"/create-news-announcement\">\r\n          <FaIcons.FaNewspaper />\r\n          <span>News Form</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/brgyforms\">\r\n          <Ionicons.IoIosPaper />\r\n          <span>Registration Forms</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Link: Profile Page */}\r\n        {/* NOTE: Profile Page only visible when user is logged in */}\r\n        <Link to=\"/my-profile\">\r\n          <MdIcons.MdPerson />\r\n          <span>My Profile</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* Log out option to sign user out */}\r\n        <a onClick={handleSignOut}>\r\n          <ImIcons.ImExit />\r\n          <span>Log Out</span>\r\n        </a>\r\n      </li>\r\n    </ListContainer>\r\n  );\r\n};\r\n\r\n// Color Variables\r\nconst itemColor = \"#F1FAEE\";\r\nconst credentialColor = \"#F1FAEE\";\r\nconst hoverBackgroundColor = \"#A8DADC\";\r\nconst hoverItemColor = \"#031926\";\r\n\r\n// Styled Components\r\nconst ListContainer = styled.div`\r\n  li {\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    padding: 8px 0px 8px 16px;\r\n    list-style: none;\r\n    height: 60px;\r\n    a {\r\n      text-decoration: none;\r\n      color: ${itemColor};\r\n      font-size: 1.2rem;\r\n      width: 95%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 0 1.2rem;\r\n      border-radius: 4px;\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: ${hoverBackgroundColor};\r\n        span {\r\n          color: ${hoverItemColor};\r\n          font-weight: bold;\r\n        }\r\n      }\r\n    }\r\n    span {\r\n      margin-left: 1rem;\r\n      color: ${itemColor};\r\n    }\r\n    .credential-container {\r\n      .credential {\r\n        color: ${credentialColor};\r\n        display: block;\r\n        margin-bottom: 0.5rem;\r\n        margin-left: 0rem;\r\n      }\r\n      #user-name {\r\n        font-size: 1.2rem;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default SignedInLinks;\r\n","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\global\\DropToggle.js",[],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-landing\\CouncilData.js",[],["162","163"],"C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-news\\Pagination.js",["164"],"// Pagination component for News Reports Page\r\n\r\nimport React from 'react';\r\n// Importing Styled Components\r\nimport styled from 'styled-components';\r\n\r\nconst Pagination = ({postsPerPage, totalPosts, paginate, currentPage}) => {\r\n    const pageNumbers = [];\r\n\r\n    // Pushing page numbers into array depending on total number of Firestore News Posts and Posts Per Page\r\n    // Note: totalPosts is the length(number) of news items fetched from Firestore\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n    return (\r\n        <MainContainer>\r\n            {pageNumbers.map(number => (\r\n                <button className={currentPage == number ? 'active' : ''} key={number} onClick={() => paginate(number)}>{number}</button>\r\n            ))}\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\n// Active Color Variables\r\nconst numberColor = \"#F1FAEE\";\r\nconst backgroundColor = \"#E63946\";\r\n\r\n// Styled Components\r\nconst MainContainer = styled.div`\r\n    display: flex;\r\n    overflow-x: scroll;\r\n    button {\r\n        padding: 0.5rem 1rem;\r\n        margin: 0.2rem;\r\n        border-radius: 0;\r\n    }\r\n    /* When a pagination button is selected */\r\n    .active {\r\n        background: ${backgroundColor};\r\n        color: ${numberColor};\r\n    }\r\n`\r\n\r\nexport default Pagination;","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-news\\NewsSummary.js",["165","166"],"// Component for summarized card of news information\r\n\r\nimport React, { useState } from 'react';\r\n// Importing Styled Components\r\nimport styled from 'styled-components';\r\n// Importing Moment.js for created date\r\nimport moment from 'moment';\r\n// For card link\r\nimport { Link } from 'react-router-dom';\r\n// Importing Redux Action and Tools\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteAnnouncement } from '../../redux-store/actions/NewsActions';\r\n// Importing Modal\r\nimport Modal from 'react-modal';\r\n// Importing all production Icons with code names\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as BsIcons from \"react-icons/bs\";\r\n// For connecting to Redux state and action\r\nimport { useSelector } from 'react-redux';\r\nimport { editAnnouncement } from '../../redux-store/actions/NewsActions';\r\n// For notifications\r\nimport { store } from 'react-notifications-component';\r\n// Importing Rich Text Editor\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n// Testing CSS Import\r\nimport '../../assets/ModalStyle.css'\r\n\r\nModal.setAppElement(\"#root\");\r\n// News Item is an object holding the news data\r\nconst NewsSummary = ({ newsItem }) => {\r\n    \r\n    // Allowing the form to dispatch action\r\n    const dispatch = useDispatch();\r\n\r\n    // Connecting to Redux auth status\r\n    const currentUserEmail = useSelector((state) => state.firebase.auth.email);\r\n\r\n    // Modal States\r\n    const [deleteModalState, setDeleteModalState] = useState(false);\r\n    const [editModalState, setEditModalState] = useState(false);\r\n\r\n    // Setting a local state for the form entry\r\n    // Note: announcementID is the ID reference of the post being edited\r\n    const [newsEdits, setNewsEdits] = useState({\r\n        announcementID: newsItem.id,\r\n        heading: '',\r\n        body: '',\r\n        attachment: null\r\n    });\r\n\r\n    const richEditorChange = (e, editor) => {\r\n        const richContent = editor.getData();\r\n        setNewsEdits({...newsEdits, body: richContent});\r\n    }\r\n\r\n    // Modal Functions\r\n    const handleEdits = (e) => {\r\n        e.preventDefault();\r\n        // Preventing submission if all form fields are empty\r\n        if (newsEdits.heading === '' && newsEdits.body === '' && newsEdits.attachment === null) {\r\n            store.addNotification({\r\n                title: \"Please provide an edit\",\r\n                message: \"No entries detected\",\r\n                type: \"danger\",\r\n                insert: \"top\",\r\n                container: \"top-right\",\r\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                dismiss: {\r\n                    duration: 2000,\r\n                    onScreen: true\r\n                }\r\n            });\r\n        } else {\r\n            dispatch(editAnnouncement(newsEdits));\r\n            setEditModalState(false);\r\n        }\r\n    };\r\n    const handleDelete = () => {\r\n        setDeleteModalState(false);\r\n        if (newsItem.attachmentURL) {\r\n            dispatch(deleteAnnouncement(newsItem.id, newsItem.attachmentURL));\r\n        } else {\r\n            dispatch(deleteAnnouncement(newsItem.id, ''));\r\n        }\r\n    };\r\n    const handleAttachment = (e) => {\r\n        if (e.target.files[0]) {\r\n            setNewsEdits({\r\n                ...newsEdits, \r\n                attachment: e.target.files[0]})\r\n        }\r\n    };\r\n    return (\r\n        <NewsCard>\r\n            {/* Section inside link tag is clickable */}\r\n            <Link to={`/news-announcement/${newsItem.id}`} key={newsItem.id} id=\"card-text\">\r\n                <div className=\"post-info\">\r\n                    <h4>{newsItem.heading}</h4>\r\n                    <div className=\"date-image\">\r\n                    {/* Using Moment.js to parse createdAt property to readable date */}\r\n                        <h5 id=\"time-stamp\">{moment(newsItem.createdAt.toDate()).calendar()}</h5>\r\n                        <>\r\n                            {newsItem.attachmentURL && \r\n                                newsItem.attachmentType === 'image/jpeg' || newsItem.attachmentType === 'image/png' ?\r\n                                    <BsIcons.BsCardImage color=\"#1D3557\" size=\"2rem\"/>\r\n                                :\r\n                                    newsItem.attachmentType === 'application/pdf' || newsItem.attachmentType === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ?\r\n                                        <AiIcons.AiOutlineFileText color=\"#1D3557\" size=\"2rem\"/>\r\n                                    :\r\n                                        ''\r\n                            }\r\n                        </>\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                </div>\r\n                <div className=\"sender-info\">\r\n                    <h5>{newsItem.authorFirstName} {newsItem.authorLastName}</h5>\r\n                    <h5 id=\"sender-email\">{newsItem.authorEmail}</h5>\r\n                </div>\r\n                {/* <p>{ReactHtmlParser(newsItem.body)}</p> */}\r\n            </Link>\r\n            <ButtonContainer>\r\n                {/* Update and Delete Button */}\r\n                {currentUserEmail === newsItem.authorEmail || currentUserEmail === \"adminuser@gmail.com\" ? \r\n                <>\r\n                    <button className=\"pop-modal\" id=\"edit-button\" onClick={() => setEditModalState(true)}><AiIcons.AiFillEdit /></button>\r\n                    <button className=\"pop-modal\" id=\"delete-button\" onClick={() => setDeleteModalState(true)}><AiIcons.AiFillDelete /></button>\r\n                </>\r\n                 : \"\"\r\n                }\r\n            </ButtonContainer>\r\n            {/* Modal Components */}\r\n\r\n            {/* Edit Post Modal */}\r\n            <Modal\r\n                isOpen={editModalState}\r\n                onRequestClose={() => setEditModalState(false)}\r\n                className=\"form-modal\"\r\n                overlayClassName=\"form-modal-overlay\"\r\n            >\r\n                <ModalContent>\r\n                    <form onSubmit={handleEdits}>\r\n                        <h4 className=\"modal-text\">Edit Your Announcement</h4>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Enter your news headline here\" \r\n                            onChange={(e) => setNewsEdits({...newsEdits, heading: e.target.value})}\r\n                        />\r\n                        <RichContent>\r\n                            <CKEditor \r\n                                id=\"rich-text-editor\" \r\n                                editor={ClassicEditor} \r\n                                onChange={richEditorChange} \r\n                            />\r\n                        </RichContent>\r\n                        <input \r\n                            type=\"file\" \r\n                            accept=\"image/png, image/jpeg, .pdf, .doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n                            onChange={handleAttachment}\r\n                        />\r\n                        <button className=\"edit-modal-button\">Save Edits</button>\r\n                        <button className=\"edit-modal-button\" onClick={() => setEditModalState(false)}>Cancel</button>\r\n                    </form>\r\n                </ModalContent>\r\n            </Modal>\r\n\r\n            {/* Delete Modal */}\r\n            <Modal\r\n                isOpen={deleteModalState}\r\n                onRequestClose={() => setDeleteModalState(false)}\r\n                className=\"delete-modal\"\r\n                overlayClassName=\"delete-modal-overlay\"\r\n            >\r\n                <ModalContent>\r\n                    <h4 className=\"modal-text\">Are you sure you wish to delete this post?</h4>\r\n                    <button className=\"delete-modal-button\" onClick={handleDelete}>Delete Announcement</button>\r\n                    <button className=\"delete-modal-button\" onClick={() => setDeleteModalState(false)}>Cancel</button>\r\n                </ModalContent>\r\n            </Modal>\r\n        </NewsCard>\r\n    );\r\n};\r\n\r\n// Color Variables\r\nconst cardBackground = \"#C7D1C4\";\r\nconst hoverBackground = \"#457B9D\";\r\nconst contentHover = \"#FFF\";\r\nconst accentColor = \"#E63946\";\r\nconst deleteButtonColor = \"#E63946\";\r\nconst editButtonColor = \"#1D3557\";\r\n\r\n// Styled Components\r\n\r\nconst NewsCard = styled.div`\r\n    margin-bottom: 2.5rem;\r\n    padding: 1.5rem;\r\n    border-radius: 2rem;\r\n    background: ${cardBackground};\r\n    transition: background 0.5s ease;\r\n    /* Relative positioning for button */\r\n    /* position: relative;\r\n    overflow: hidden; */\r\n    &:hover {\r\n        background: ${hoverBackground};\r\n        h4, h5, p {\r\n            color: ${contentHover};\r\n        }\r\n        .divider {\r\n            background: ${contentHover};\r\n        }\r\n    }\r\n    h4 {\r\n        margin-top: 1.2rem;\r\n    }\r\n    h4, h5 {\r\n        font-weight: bold;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n    h5 {\r\n        font-size: 1.2rem;\r\n    }\r\n    p {\r\n        font-weight: lighter;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n    }\r\n    h4, h5, p {\r\n        transition: color 0.5s ease;\r\n    }\r\n    #card-text {\r\n        display: flex;\r\n        .post-info {\r\n            width: 75%;\r\n            .date-image {\r\n                display: flex;\r\n                align-items: center;\r\n                #time-stamp {\r\n                    margin-right: 1rem;\r\n                }\r\n                @media (max-width: 870px) {\r\n                    /* flex-direction: column;\r\n                    align-items: flex-start; */\r\n                }\r\n            }\r\n        }\r\n        .sender-info {\r\n            width: 25%;\r\n            margin: 1rem 0;\r\n            border-left: 0.2rem solid ${accentColor};\r\n            padding-left: 1rem;\r\n            h5 {\r\n                font-weight: lighter;\r\n            }\r\n            #sender-email {\r\n                word-break: break-all;\r\n            }\r\n        }\r\n        .divider {\r\n            width: 13%;\r\n            height: 0.2rem;\r\n            background: ${accentColor};\r\n            transition: background 0.5s ease;\r\n            margin-bottom: 2rem;\r\n        }\r\n        #attachment-indicator, #time-stamp, #sender-email {\r\n            font-style: italic;\r\n        }\r\n        #attachment-indicator {\r\n            margin-top: 1rem;\r\n        }\r\n        @media (max-width: 870px) {\r\n            flex-direction: column;\r\n            .post-info, .sender-info {\r\n                width: 100%;\r\n            }\r\n            .sender-info {\r\n                border-left: none;\r\n                padding-left: 0;\r\n            }\r\n            .divider {\r\n                width: 100%;\r\n                margin-bottom: 0.5rem;\r\n            }\r\n        }\r\n    }\r\n    @media (max-width: 870px) {\r\n        h4 {\r\n            font-size: 1.5rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    display: flex;\r\n    /* Buttons for triggering modals */\r\n    .pop-modal {\r\n        /* position: absolute;\r\n        top: -5%;\r\n        right: -1%;\r\n        border-bottom-left-radius: 2rem;\r\n        padding: 1rem 2.5rem 0.1rem 2rem;\r\n        background: ${accentColor};\r\n        color: ${contentHover};\r\n        font-size: 2rem; */\r\n        color: ${contentHover};\r\n        font-size: 2rem;\r\n        padding: 0.5rem 3rem;\r\n        margin-right: 0.5rem;\r\n    }\r\n    #edit-button {\r\n        background: ${editButtonColor};\r\n        border-color: ${editButtonColor};\r\n    }\r\n    #delete-button {\r\n        background: ${deleteButtonColor};\r\n        border-color: ${deleteButtonColor};\r\n    }\r\n    @media (max-width: 870px) {\r\n        .pop-modal {\r\n            font-size: 1.5rem;\r\n        }\r\n    }\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    button.delete-modal-button {\r\n        width: 50%;\r\n        margin: 0.5rem 0;\r\n        @media (max-width: 870px) {\r\n            width: 100%;\r\n        }\r\n    }\r\n    button.edit-modal-button {\r\n        width: 40%;\r\n        margin: 0.5rem 5%;\r\n        @media (max-width: 870px) {\r\n            width: 100%;\r\n            margin: 0.5rem 0;\r\n        }\r\n    }\r\n    .modal-text {\r\n        margin-bottom: 1rem;\r\n    }\r\n    form {\r\n        width: 100%;\r\n        input, textarea {\r\n            display: block;\r\n            margin-bottom: 1rem;\r\n            font-size: 1.5rem;\r\n            padding: 0.5rem;\r\n            border: 2px solid ${hoverBackground};\r\n            outline: none;\r\n        }\r\n        input {\r\n            width: 100%;\r\n        }\r\n        input[type=file] {\r\n            border: none;\r\n        }\r\n        textarea {\r\n            width: 100%;\r\n        }\r\n        @media (max-width: 870px) {\r\n            input, textarea {\r\n                font-size: 1rem;\r\n            }\r\n            textarea {\r\n                /* column-count: 10; */\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst RichContent = styled.div`\r\n    h1, h2, h3, h4, h5, p {\r\n        color: black;\r\n        padding: 0;\r\n        margin: 0;\r\n        font-weight: light;\r\n    }\r\n    ol, ul {\r\n        margin-left: 2rem;\r\n        li {\r\n            font-size: 1.4rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport default NewsSummary;\r\n","C:\\Users\\Julian Bass\\Documents\\WebDev Exercises\\react\\magallanes-react\\src\\components\\for-faq\\FaqData.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":26,"column":10,"nodeType":"173","messageId":"174","endLine":26,"endColumn":25},{"ruleId":"171","severity":1,"message":"175","line":36,"column":9,"nodeType":"173","messageId":"174","endLine":36,"endColumn":13},{"ruleId":"176","severity":1,"message":"177","line":51,"column":45,"nodeType":"178","messageId":"179","endLine":51,"endColumn":47},{"ruleId":"176","severity":1,"message":"177","line":52,"column":66,"nodeType":"178","messageId":"179","endLine":52,"endColumn":68},{"ruleId":"171","severity":1,"message":"180","line":9,"column":20,"nodeType":"173","messageId":"174","endLine":9,"endColumn":28},{"ruleId":"171","severity":1,"message":"181","line":15,"column":10,"nodeType":"173","messageId":"174","endLine":15,"endColumn":14},{"ruleId":"171","severity":1,"message":"182","line":17,"column":23,"nodeType":"173","messageId":"174","endLine":17,"endColumn":35},{"ruleId":"183","severity":1,"message":"184","line":84,"column":9,"nodeType":"185","endLine":84,"endColumn":36},{"ruleId":"167","replacedBy":"186"},{"ruleId":"169","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":18,"column":48,"nodeType":"190","messageId":"191","endLine":18,"endColumn":50},{"ruleId":"176","severity":1,"message":"177","line":105,"column":53,"nodeType":"178","messageId":"179","endLine":105,"endColumn":55},{"ruleId":"176","severity":1,"message":"177","line":106,"column":74,"nodeType":"178","messageId":"179","endLine":106,"endColumn":76},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'AnimatePresence' is defined but never used.","Identifier","unusedVar","'auth' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'revealUp' is defined but never used.","'Link' is defined but never used.","'setQuestions' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["192"],["193"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]